@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject Blazored.SessionStorage.ISessionStorageService StorageService
@using courtesynotes.Components
@using courtesynotes.Models
 
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            @if (SessionModel.Authorized == false)
            {
                <a class="login-modal oi-account-login" @onclick="() => OpenLoginModal()">Login</a>
                <a class="register-modal oi-account-login" @onclick="() => OpenRegisterModal()">Register</a>
            }
            else
            {
                <a class="login-modal" @onclick="() => LogoutSession()">Logout</a>
            }
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>
@code {
    [CascadingParameter] private IModalService Modal { get; set; }
    [CascadingParameter]  BlazoredModalInstance ModalInstance { get; set; }
    private async Task OpenLoginModal()
    {
        Modal.Show<LoginComponent>("Login");
    }
    private async Task OpenRegisterModal()
    {
        Modal.Show<RegisterComponent>("Register");
    }
    private async Task LogoutSession()
    {
        await StorageService.ClearAsync();
        SessionModel.Authorized = false;
        NavManager.NavigateTo("/");
    }
}